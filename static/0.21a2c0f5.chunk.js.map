{"version":3,"sources":["webpack:///static/0.21a2c0f5.chunk.js","webpack:///./demo/Demo.jsx","webpack:///./node_modules/qr.js/lib/mode.js","webpack:///./node_modules/qr.js/lib/ErrorCorrectLevel.js","webpack:///./node_modules/qr.js/lib/Polynomial.js","webpack:///./node_modules/qr.js/lib/math.js","webpack:///./demo/Layout.jsx","webpack:///./src/index.js","webpack:///./src/components/qr-svg.js","webpack:///./node_modules/qr.js/lib/QRCode.js","webpack:///./node_modules/qr.js/lib/8BitByte.js","webpack:///./node_modules/qr.js/lib/RSBlock.js","webpack:///./node_modules/qr.js/lib/BitBuffer.js","webpack:///./node_modules/qr.js/lib/util.js"],"names":["webpackJsonp","777","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_Layout","_Layout2","_src","Demo","_React$Component","context","this","_this","getPrototypeOf","updateValue","e","setState","updateLevel","level","updateBgColor","bgColor","updateFgColor","fgColor","state","createElement","className","htmlFor","id","onChange","type","style","textAlign","QRCode","width","Component","779","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","780","L","M","Q","H","781","QRPolynomial","num","shift","undefined","Error","offset","Array","math","get","index","getLength","multiply","j","gexp","glog","mod","ratio","782","QRMath","n","LOG_TABLE","EXP_TABLE","783","_propTypes","_propTypes2","Layout","_ref","children","margin","maxWidth","propTypes","node","784","_qrSvg","785","_objectWithoutProperties","keys","indexOf","hasOwnProperty","arguments","_ref$value","_ref$level","_ref$bgColor","_ref$fgColor","_ref$cellClassPrefix","cellClassPrefix","otherProps","qrcode","QRCodeImpl","ErrorCorrectLevel","addData","make","cells","modules","cellClassName","emptyCellClassName","filledCellClassName","cellIndex","_extends","shapeRendering","viewBox","join","map","row","rowIndex","cell","colIndex","classNameProp","fill","styleProp","height","x","y","assign","source","string","isRequired","size","number","oneOf","786","typeNumber","errorCorrectLevel","moduleCount","dataCache","dataList","BitByte","RSBlock","BitBuffer","util","Polynomial","proto","data","newData","push","isDark","col","getModuleCount","rsBlocks","getRSBlocks","buffer","totalDataCount","dataCount","put","mode","getLengthInBits","write","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","bits","getBCHTypeNumber","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","putBit","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","totalCodeCount","787","QR8bitByte","charCodeAt","788","QRRSBlock","ECL","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","count","789","QRBitBuffer","bufIndex","bit","790","Mode","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","qrCode","sameCount","darkCount","abs"],"mappings":"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","file":"static/0.21a2c0f5.chunk.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 777:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(15);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Layout = __webpack_require__(783);\n\nvar _Layout2 = _interopRequireDefault(_Layout);\n\nvar _src = __webpack_require__(784);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Demo = function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    function Demo(props, context) {\n        _classCallCheck(this, Demo);\n\n        var _this = _possibleConstructorReturn(this, (Demo.__proto__ || Object.getPrototypeOf(Demo)).call(this, props, context));\n\n        _this.updateValue = function (e) {\n            return _this.setState({ value: e.target.value });\n        };\n\n        _this.updateLevel = function (e) {\n            return _this.setState({ level: e.target.value });\n        };\n\n        _this.updateBgColor = function (e) {\n            return _this.setState({ bgColor: e.target.value });\n        };\n\n        _this.updateFgColor = function (e) {\n            return _this.setState({ fgColor: e.target.value });\n        };\n\n        _this.state = {\n            value: \"Try changing the values and see the code update in real-time!\",\n            level: \"L\",\n            bgColor: \"#FFFFFF\",\n            fgColor: \"#000000\"\n        };\n        return _this;\n    }\n\n    _createClass(Demo, [{\n        key: \"render\",\n        value: function render() {\n            var state = this.state,\n                updateValue = this.updateValue,\n                updateLevel = this.updateLevel,\n                updateBgColor = this.updateBgColor,\n                updateFgColor = this.updateFgColor;\n\n            return _react2.default.createElement(\n                _Layout2.default,\n                null,\n                _react2.default.createElement(\n                    \"form\",\n                    { className: \"pure-form pure-form-stacked\" },\n                    _react2.default.createElement(\n                        \"fieldset\",\n                        null,\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: \"pure-g\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"pure-u-1\" },\n                                _react2.default.createElement(\n                                    \"label\",\n                                    { htmlFor: \"value\" },\n                                    \"Value\"\n                                ),\n                                _react2.default.createElement(\"textarea\", {\n                                    className: \"pure-input-1\",\n                                    id: \"value\",\n                                    onChange: updateValue,\n                                    type: \"text\",\n                                    value: state.value\n                                })\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"pure-u-1-3\" },\n                                _react2.default.createElement(\n                                    \"label\",\n                                    { htmlFor: \"level\" },\n                                    \"Level\"\n                                ),\n                                _react2.default.createElement(\n                                    \"select\",\n                                    { id: \"level\", onChange: updateLevel },\n                                    _react2.default.createElement(\n                                        \"option\",\n                                        { value: \"L\" },\n                                        \"L\"\n                                    ),\n                                    _react2.default.createElement(\n                                        \"option\",\n                                        { value: \"M\" },\n                                        \"M\"\n                                    ),\n                                    _react2.default.createElement(\n                                        \"option\",\n                                        { value: \"Q\" },\n                                        \"Q\"\n                                    ),\n                                    _react2.default.createElement(\n                                        \"option\",\n                                        { value: \"H\" },\n                                        \"H\"\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"pure-u-1-3\" },\n                                _react2.default.createElement(\n                                    \"label\",\n                                    { htmlFor: \"fgColor\" },\n                                    \"Foregroud\"\n                                ),\n                                _react2.default.createElement(\"input\", {\n                                    id: \"fgColor\",\n                                    onChange: updateFgColor,\n                                    type: \"color\",\n                                    value: state.fgColor\n                                })\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"pure-u-1-3\" },\n                                _react2.default.createElement(\n                                    \"label\",\n                                    { htmlFor: \"bgColor\" },\n                                    \"Background\"\n                                ),\n                                _react2.default.createElement(\"input\", {\n                                    id: \"bgColor\",\n                                    onChange: updateBgColor,\n                                    type: \"color\",\n                                    value: state.bgColor\n                                })\n                            )\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { style: { textAlign: \"center\" } },\n                    _react2.default.createElement(_src.QRCode, {\n                        bgColor: state.bgColor,\n                        fgColor: state.fgColor,\n                        level: state.level,\n                        style: { width: 500 },\n                        value: state.value\n                    })\n                )\n            );\n        }\n    }]);\n\n    return Demo;\n}(_react2.default.Component);\n\nexports.default = Demo;\n\n/***/ }),\n\n/***/ 779:\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n\n\n/***/ }),\n\n/***/ 780:\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n\n\n/***/ }),\n\n/***/ 781:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar math = __webpack_require__(782);\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n\n\n/***/ }),\n\n/***/ 782:\n/***/ (function(module, exports) {\n\nvar QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nmodule.exports = QRMath;\n\n\n/***/ }),\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(15);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(19);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Layout = function Layout(_ref) {\n    var children = _ref.children;\n    return _react2.default.createElement(\n        \"article\",\n        { style: { margin: \"1rem\", maxWidth: \"60rem\" } },\n        children\n    );\n};\n\nLayout.propTypes = {\n    children: _propTypes2.default.node\n};\n\nexports.default = Layout;\n\n/***/ }),\n\n/***/ 784:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _qrSvg = __webpack_require__(785);\n\nmodule.exports = { QRCode: _qrSvg.QRCode };\n\n/***/ }),\n\n/***/ 785:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.QRCode = QRCode;\n\nvar _react = __webpack_require__(15);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(19);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar QRCodeImpl = __webpack_require__(786);\nvar ErrorCorrectLevel = __webpack_require__(780);\n\nfunction QRCode() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref$value = _ref.value,\n        value = _ref$value === undefined ? \"\" : _ref$value,\n        _ref$level = _ref.level,\n        level = _ref$level === undefined ? \"L\" : _ref$level,\n        _ref$bgColor = _ref.bgColor,\n        bgColor = _ref$bgColor === undefined ? \"#FFFFFF\" : _ref$bgColor,\n        _ref$fgColor = _ref.fgColor,\n        fgColor = _ref$fgColor === undefined ? \"#000000\" : _ref$fgColor,\n        _ref$cellClassPrefix = _ref.cellClassPrefix,\n        cellClassPrefix = _ref$cellClassPrefix === undefined ? \"\" : _ref$cellClassPrefix,\n        otherProps = _objectWithoutProperties(_ref, [\"value\", \"level\", \"bgColor\", \"fgColor\", \"cellClassPrefix\"]);\n\n    // adapted from https://github.com/zpao/qrcode.react/blob/master/src/index.js\n    var qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n    qrcode.addData(value);\n    qrcode.make();\n\n    var cells = qrcode.modules;\n\n    var cellClassName = cellClassPrefix && cellClassPrefix + \"-cell\";\n    var emptyCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-empty\";\n    var filledCellClassName = cellClassPrefix && cellClassName + \" \" + cellClassPrefix + \"-cell-filled\";\n\n    var cellIndex = 0; // we use simple order as a key just to avoid the key warning here\n\n    return _react2.default.createElement(\n        \"svg\",\n        _extends({\n            shapeRendering: \"crispEdges\",\n            viewBox: [0, 0, cells.length, cells.length].join(\" \")\n        }, otherProps),\n        cells.map(function (row, rowIndex) {\n            return row.map(function (cell, colIndex) {\n                var className = cell ? filledCellClassName : emptyCellClassName;\n                var classNameProp = className ? { className: className } : null;\n\n                // Only use the fill if no cellClassPrefix was set. See https://github.com/no23reason/react-qr-svg/issues/136 for reasoning.\n                var fill = !classNameProp && (cell ? fgColor : bgColor);\n                var styleProp = fill ? { style: { fill: fill } } : null;\n                return _react2.default.createElement(\"rect\", _extends({\n                    height: 1,\n                    key: cellIndex++ // string was too slow here\n                }, styleProp, classNameProp, {\n                    width: 1,\n                    x: colIndex,\n                    y: rowIndex\n                }));\n            });\n        })\n    );\n}\n\nQRCode.propTypes = {\n    value: _propTypes2.default.string.isRequired,\n    size: _propTypes2.default.number,\n    level: _propTypes2.default.oneOf([\"L\", \"M\", \"Q\", \"H\"]),\n    bgColor: _propTypes2.default.string,\n    fgColor: _propTypes2.default.string,\n    cellClassPrefix: _propTypes2.default.string\n};\n\n/***/ }),\n\n/***/ 786:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BitByte = __webpack_require__(787);\nvar RSBlock = __webpack_require__(788);\nvar BitBuffer = __webpack_require__(789);\nvar util = __webpack_require__(790);\nvar Polynomial = __webpack_require__(781);\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nmodule.exports = QRCode;\n\n\n\n/***/ }),\n\n/***/ 787:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar mode = __webpack_require__(779);\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nmodule.exports = QR8bitByte;\n\n\n\n/***/ }),\n\n/***/ 788:\n/***/ (function(module, exports, __webpack_require__) {\n\n// ErrorCorrectLevel\nvar ECL = __webpack_require__(780);\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\nmodule.exports = QRRSBlock;\n\n\n/***/ }),\n\n/***/ 789:\n/***/ (function(module, exports) {\n\nfunction QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nmodule.exports = QRBitBuffer;\n\n\n/***/ }),\n\n/***/ 790:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Mode = __webpack_require__(779);\nvar Polynomial = __webpack_require__(781);\nvar math = __webpack_require__(782);\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/0.21a2c0f5.chunk.js","import React from \"react\";\nimport Layout from \"./Layout\";\nimport { QRCode } from \"../src\";\n\nclass Demo extends React.Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            value:\n                \"Try changing the values and see the code update in real-time!\",\n            level: \"L\",\n            bgColor: \"#FFFFFF\",\n            fgColor: \"#000000\",\n        };\n    }\n\n    updateValue = (e) => this.setState({ value: e.target.value });\n    updateLevel = (e) => this.setState({ level: e.target.value });\n    updateBgColor = (e) => this.setState({ bgColor: e.target.value });\n    updateFgColor = (e) => this.setState({ fgColor: e.target.value });\n\n    render() {\n        const {\n            state,\n            updateValue,\n            updateLevel,\n            updateBgColor,\n            updateFgColor,\n        } = this;\n        return (\n            <Layout>\n                <form className=\"pure-form pure-form-stacked\">\n                    <fieldset>\n                        <div className=\"pure-g\">\n                            <div className=\"pure-u-1\">\n                                <label htmlFor=\"value\">Value</label>\n                                <textarea\n                                    className=\"pure-input-1\"\n                                    id=\"value\"\n                                    onChange={updateValue}\n                                    type=\"text\"\n                                    value={state.value}\n                                />\n                            </div>\n                            <div className=\"pure-u-1-3\">\n                                <label htmlFor=\"level\">Level</label>\n                                <select id=\"level\" onChange={updateLevel}>\n                                    <option value=\"L\">L</option>\n                                    <option value=\"M\">M</option>\n                                    <option value=\"Q\">Q</option>\n                                    <option value=\"H\">H</option>\n                                </select>\n                            </div>\n                            <div className=\"pure-u-1-3\">\n                                <label htmlFor=\"fgColor\">Foregroud</label>\n                                <input\n                                    id=\"fgColor\"\n                                    onChange={updateFgColor}\n                                    type=\"color\"\n                                    value={state.fgColor}\n                                />\n                            </div>\n                            <div className=\"pure-u-1-3\">\n                                <label htmlFor=\"bgColor\">Background</label>\n                                <input\n                                    id=\"bgColor\"\n                                    onChange={updateBgColor}\n                                    type=\"color\"\n                                    value={state.bgColor}\n                                />\n                            </div>\n                        </div>\n                    </fieldset>\n                </form>\n                <div style={{ textAlign: \"center\" }}>\n                    <QRCode\n                        bgColor={state.bgColor}\n                        fgColor={state.fgColor}\n                        level={state.level}\n                        style={{ width: 500 }}\n                        value={state.value}\n                    />\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Demo;\n\n\n\n// WEBPACK FOOTER //\n// ./demo/Demo.jsx","module.exports = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/mode.js\n// module id = 779\n// module chunks = 0 1","module.exports = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/ErrorCorrectLevel.js\n// module id = 780\n// module chunks = 0 1","var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/Polynomial.js\n// module id = 781\n// module chunks = 0 1","var QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nmodule.exports = QRMath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/math.js\n// module id = 782\n// module chunks = 0 1","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Layout = ({ children }) => (\n    <article style={{ margin: \"1rem\", maxWidth: \"60rem\" }}>{children}</article>\n);\n\nLayout.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Layout;\n\n\n\n// WEBPACK FOOTER //\n// ./demo/Layout.jsx","\"use strict\";\nimport { QRCode } from \"./components/qr-svg\";\nmodule.exports = { QRCode };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst QRCodeImpl = require(\"qr.js/lib/QRCode\");\nconst ErrorCorrectLevel = require(\"qr.js/lib/ErrorCorrectLevel\");\n\nexport function QRCode({\n    value = \"\",\n    level = \"L\",\n    bgColor = \"#FFFFFF\",\n    fgColor = \"#000000\",\n    cellClassPrefix = \"\",\n    ...otherProps\n} = {}) {\n    // adapted from https://github.com/zpao/qrcode.react/blob/master/src/index.js\n    const qrcode = new QRCodeImpl(-1, ErrorCorrectLevel[level]);\n    qrcode.addData(value);\n    qrcode.make();\n\n    const cells = qrcode.modules;\n\n    const cellClassName = cellClassPrefix && `${cellClassPrefix}-cell`;\n    const emptyCellClassName =\n        cellClassPrefix && `${cellClassName} ${cellClassPrefix}-cell-empty`;\n    const filledCellClassName =\n        cellClassPrefix && `${cellClassName} ${cellClassPrefix}-cell-filled`;\n\n    let cellIndex = 0; // we use simple order as a key just to avoid the key warning here\n\n    return (\n        <svg\n            shapeRendering=\"crispEdges\"\n            viewBox={[0, 0, cells.length, cells.length].join(\" \")}\n            {...otherProps}\n        >\n            {cells.map((row, rowIndex) =>\n                row.map((cell, colIndex) => {\n                    const className = cell\n                        ? filledCellClassName\n                        : emptyCellClassName;\n                    const classNameProp = className ? { className } : null;\n\n                    // Only use the fill if no cellClassPrefix was set. See https://github.com/no23reason/react-qr-svg/issues/136 for reasoning.\n                    const fill = !classNameProp && (cell ? fgColor : bgColor);\n                    const styleProp = fill ? { style: { fill } } : null;\n                    return (\n                        <rect\n                            height={1}\n                            key={cellIndex++} // string was too slow here\n                            {...styleProp}\n                            {...classNameProp}\n                            width={1}\n                            x={colIndex}\n                            y={rowIndex}\n                        />\n                    );\n                }),\n            )}\n        </svg>\n    );\n}\n\nQRCode.propTypes = {\n    value: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    level: PropTypes.oneOf([\"L\", \"M\", \"Q\", \"H\"]),\n    bgColor: PropTypes.string,\n    fgColor: PropTypes.string,\n    cellClassPrefix: PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/qr-svg.js","var BitByte = require('./8BitByte');\nvar RSBlock = require('./RSBlock');\nvar BitBuffer = require('./BitBuffer');\nvar util = require('./util');\nvar Polynomial = require('./Polynomial');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nmodule.exports = QRCode;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/QRCode.js\n// module id = 786\n// module chunks = 0 1","var mode = require('./mode');\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nmodule.exports = QR8bitByte;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/8BitByte.js\n// module id = 787\n// module chunks = 0 1","// ErrorCorrectLevel\nvar ECL = require('./ErrorCorrectLevel');\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\nmodule.exports = QRRSBlock;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/RSBlock.js\n// module id = 788\n// module chunks = 0 1","function QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nmodule.exports = QRBitBuffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/BitBuffer.js\n// module id = 789\n// module chunks = 0 1","var Mode = require('./mode');\nvar Polynomial = require('./Polynomial');\nvar math = require('./math');\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/qr.js/lib/util.js\n// module id = 790\n// module chunks = 0 1"],"sourceRoot":""}