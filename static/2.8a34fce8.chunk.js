webpackJsonp([2],{776:function(e,n,t){var o=t(15),s=t(45),r=t(286).PageRenderer;r.__esModule&&(r=r.default);var a=s({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(791)}},componentWillMount:function(){},render:function(){return o.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,e.exports=a},791:function(e,n){e.exports='![Node.js CI](https://github.com/no23reason/react-qr-svg/workflows/Node.js%20CI/badge.svg) [![npm version](https://img.shields.io/npm/v/react-qr-svg.svg)](https://www.npmjs.com/package/react-qr-svg) [![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n# react-qr-svg\n\nReact component for rendering SVG QR codes\n\n## \u26a0\ufe0f Deprecation notice \u26a0\ufe0f\n\nThe more popular and feature rich [`qrcode.react`](https://github.com/zpao/qrcode.react) which was the original inspiration of this package has added SVG support since this package was created. Its SVG is more optimal than the SVG generated by `react-qr-svg` and it also offers some cool features like image embedding.\nThis makes `react-qr-svg` obsolete and so it has been marked as deprecated. Please use [`qrcode.react`](https://github.com/zpao/qrcode.react) instead.\n\n## Demo\n\nBasic demo can be found at the [demo page](https://no23reason.github.io/react-qr-svg/#/demo).\n\n## Why SVG?\n\nMost of the existing React components for QR (namely [`qrcode.react`](https://github.com/zpao/qrcode.react), which was used as a starting point for this project) use `<canvas>` for rendering.\n\nThis is fine for most scenarios, however when trying to print such code, it gets blurry. This is caused by the fact that `<canvas>` contents get rastered and _then_ scaled in the process resulting in the blurriness.\n\nOn the other hand, SVG retains the vector information of its contents and therefore is scaled properly when printed.\n\n## Basic Usage\n\nInstall using `npm`:\n\n```js\nnpm install react-qr-svg --save\n```\n\nThen use in your application like this:\n\n```js\nimport React from "react";\nimport { QRCode } from "react-qr-svg";\n\nclass Demo extends React.Component {\n    render() {\n        return (\n            <QRCode\n                bgColor="#FFFFFF"\n                fgColor="#000000"\n                level="Q"\n                style={{ width: 256 }}\n                value="some text"\n            />\n        );\n    }\n}\n```\n\n## Props\n\nThe props available are (shown with default values):\n\n```js\n{\n    value: \'\', // The value to encode in the code\n    level: \'L\', // QR Error correction level\n    bgColor: \'#FFFFFF\', // Color of the bright squares\n    fgColor: \'#000000\', // Color of the dark squares\n    cellClassPrefix: \'\', // Prefix of the CSS classes, if specified, bgColor and fgColor are ignored\n}\n```\n\nThe `level` prop corresponds to [Error correction level](https://en.wikipedia.org/wiki/QR_code#Error_correction) so the valid values are `L`, `M`, `Q` and `H`.\n\nYou can also specify all the props that are valid for the `<svg>` React element (e.g. `style`, `className` or `width` which you can use to specify the size of the QR code).\n\n## CSS styling\n\nYou can use CSS to set the QR code colors instead of the `bgColor` and `fgColor` props. You just need to specify the `cellClassPrefix` prop and three CSS classes will become available for you to style.\n\nLet\'s say you used `my-qr-code` as the `cellClassPrefix`. The generated classes are:\n\n*   `my-qr-code-cell` for all the cells\n*   `my-qr-code-cell-empty` for the empty cells\n*   `my-qr-code-cell-filled` for the filled cells\n\nYou can then set the colors using the `fill` CSS property. See [CSS Demo](https://no23reason.github.io/react-qr-svg/#/css-demo) for an example.\n\n**Note**: If you specify `cellClassPrefix`, `bgColor` and `fgColor` values are ignored.\n\n## Acknowledgements\n\nThis project is heavily inspired by the [`qrcode.react`](https://github.com/zpao/qrcode.react) project.\n\nThis project uses the [`react-component-boilerplate`](https://github.com/survivejs/react-component-boilerplate).\n\n## License\n\n_react-qr-svg_ is available under MIT. See [LICENSE](https://github.com/no23reason/react-qr-svg/tree/master/LICENSE) for more details.\n'}});
//# sourceMappingURL=2.8a34fce8.chunk.js.map